from aiogram import Router, Bot
from aiogram.types import Message, CallbackQuery
from aiogram.filters import CommandStart, or_f, CommandObject
from aiogram.utils.deep_linking import decode_payload
from utils.Middleware.filters.database import UserExsiting
from utils.filters.handlers import IsThatCall, IsThatText
from loader import UserButtonsManager
from utils.database.models import User, Referral
from tortoise.transactions import in_transaction

router = Router(name='start')

router.callback_query.middleware.register(
    UserExsiting()
)


@router.message(
    or_f(
        CommandStart(),
        CommandStart(
            deep_link=True
        ),
        IsThatText("üè†–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—éüè†")
    )
)
@router.callback_query(
    IsThatCall('menu')
)
async def start(
    message: Message | CallbackQuery,
    bot: Bot,
    user: User | None = None,
    command: CommandObject | None = None,
) -> None:
    user_id = message.from_user.id
    username = message.from_user.username
    language_code = message.from_user.language_code
    referrer = None

    menu_text = 'üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'

    if hasattr(message, 'data'):
        message = message.message

        return await message.edit_text(
            text=menu_text,
            reply_markup=UserButtonsManager.start_inline_button(
                language_code=user.language_code
            )
        )

    args = command.args if command else None

    default_data_user = {
        'username': username,
        'language_code': language_code
    }

    if args:
        try:
            ref_id = decode_payload(args)
            referrer = await User.get_or_none(id=int(ref_id))
        except ValueError:
            pass  # –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ ref_id –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è, –µ—Å–ª–∏ –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ —É–¥–∞–ª–æ—Å—å

    async with in_transaction():
        user, created = await User.get_or_create(
            id=user_id,
            defaults=default_data_user
        )

        if created and referrer:
            user.referrer = referrer
            await user.save()

            # –û–±–µ—Å–ø–µ—á–∏–≤–∞–µ–º, —á—Ç–æ –∑–∞–ø–∏—Å—å –æ —Ä–µ—Ñ–µ—Ä–∞–ª–µ —Å–æ–∑–¥–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            await Referral.get_or_create(
                user=referrer,
                referred_user=user
            )

            NewRefText = "<b>üÜï –£ –≤–∞—Å –Ω–æ–≤—ã–π —Ä–µ—Ñ–µ—Ä–∞–ª—å</b>"
            await bot.send_message(
                chat_id=referrer.id,
                text=NewRefText
            )

    await message.answer(
        text="üè†",
        reply_markup=UserButtonsManager.one_button_keyboard(
            ButtonText="üè†–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—éüè†"
        )
    )
    return await message.answer(
        text=menu_text,
        reply_markup=UserButtonsManager.start_inline_button(
            language_code=user.language_code
        )
    )

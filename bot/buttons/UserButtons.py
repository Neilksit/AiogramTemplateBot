from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup, ReplyKeyboardMarkup, KeyboardButton


class UserButtons(

):
    def __init__(
        self,
        default_back_button=True,
        changing_lang_buttons=True,
        max_items_for_line=3
    ):
        # –ü–æ —É–º–æ–ª—å—á–∞–Ω–∏—é –µ—Å—Ç—å –ª–∏ –∫–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥
        self._default_back_only = default_back_button
        # –ï—Å—Ç—å –ª–∏ –∫–Ω–æ–ø–∫–∞ –¥–ª—è —Å–º–µ–Ω—ã —è–∑—ã–∫–∞
        self._changing_lang_buttons = changing_lang_buttons
        self._max_items_for_line = max_items_for_line  # –ú–∞–∫—Å –∫–Ω–æ–ø–æ–∫ –≤ —Å—Ç—Ä–æ–∫—É
        self._max_items_for_page = self._max_items_for_line * \
            5  # –ú–∞–∫—Å –∫–æ–ª –∫–Ω–æ–ø–æ–∫ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ

    def one_button_inline(
        self,
        ButtonText: str = "‚ùå –ó–∞–∫—Ä—ã—Ç—å",
        ButtonCall: str = "close"
    ) -> InlineKeyboardMarkup:
        button = [
            [
                InlineKeyboardButton(
                    text=ButtonText,
                    callback_data=ButtonCall
                )
            ]
        ]

        return InlineKeyboardMarkup(inline_keyboard=button)
    
    def one_button_keyboard(
        self,
        ButtonText: str = "‚ùå –ó–∞–∫—Ä—ã—Ç—å"
    ) -> ReplyKeyboardMarkup:
        button = [
            [
                KeyboardButton(
                    text=ButtonText
                )
            ]
        ]

        return ReplyKeyboardMarkup(keyboard=button, resize_keyboard=True)


    def start_inline_button(
        self,
        language_code='ru',
        IsAdmin: bool = False
    ) -> InlineKeyboardMarkup:
        buttons = [
            [
                InlineKeyboardButton(
                    text="üë• –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞",
                    callback_data='ref_system'
                )
            ]
        ]

        if self._changing_lang_buttons:
            buttons.append(
                [
                    InlineKeyboardButton(
                        text="üåê –°–º–µ–Ω–∏—Ç—å —è–∑—ã–∫",
                        callback_data="change_lang"
                    )
                ]
            )

        buttons.append(
            [
                InlineKeyboardButton(
                    text="üßë‚Äçüíª –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–µ",
                    callback_data='dev_info'
                )
            ]
        )

        return InlineKeyboardMarkup(inline_keyboard=buttons)

    def ref_system_inline_button(
        self,
        language_code: str = 'ru',
        back_button: bool = None
    ) -> InlineKeyboardMarkup:
        """ 
            –ö–Ω–æ–ø–∫–∏ –¥–ª—è —Ä–µ—Ñ–µ—Ä–∞–ª–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã
        """
        buttons = [
            [
                InlineKeyboardButton(
                    text="üìú –°–ø–∏—Å–æ–∫ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤",
                    callback_data="ref_list"
                )
            ]
        ]

        if back_button is not None:
            if back_button:
                buttons.append(
                    [
                        InlineKeyboardButton(
                            text="üè† –í –º–µ–Ω—é",
                            callback_data="menu"
                        )
                    ]
                )
        elif self._default_back_only:
            buttons.append(
                [
                    InlineKeyboardButton(
                        text="üè† –í –º–µ–Ω—é",
                        callback_data="menu"
                    )
                ]
            )

        return InlineKeyboardMarkup(
            inline_keyboard=buttons
        )
